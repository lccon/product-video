<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/tx
	     http://www.springframework.org/schema/tx/spring-tx.xsd
	     http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd">

  <aop:aspectj-autoproxy proxy-target-class="true"/>

  <context:component-scan base-package="cilicili.jz2">
    <context:exclude-filter type="annotation"
                            expression="org.springframework.stereotype.Controller" />
  </context:component-scan>

  <context:property-placeholder location="classpath:grid.properties"/>

  <!-- 基于注解方式使用异常处理框架 -->
  <bean class="cilicili.jz2.exception.processor.ExceptionalAnnotationBeanPostProcessor" />
  <bean id="captureExceptionHandler" class="cilicili.jz2.exception.view.CaptureExceptionHandler"></bean>

  <!-- 注解式事务 @Transaction -->
  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <!-- 声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager -->
  <tx:advice id="txAdvice" transaction-manager="txManager">
    <tx:attributes>
      <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
      <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
      <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
      <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
      <tx:method name="modify*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
      <tx:method name="edit*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
      <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
      <tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
      <tx:method name="move*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
      <tx:method name="get*" propagation="SUPPORTS" />
      <tx:method name="find*" propagation="SUPPORTS" />
      <tx:method name="load*" propagation="SUPPORTS" />
      <tx:method name="search*" propagation="SUPPORTS" />
      <tx:method name="*" propagation="SUPPORTS" />
    </tx:attributes>
  </tx:advice>

  <aop:config expose-proxy="true">
    <!-- 只对业务逻辑层实施事务 -->
    <aop:pointcut id="txPointcut" expression="execution(* cilicili..service.*Service.*(..))" />
    <!-- Advisor定义，切入点和通知分别为txPointcut、txAdvice -->
    <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice" />
  </aop:config>

</beans>